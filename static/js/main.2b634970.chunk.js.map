{"version":3,"sources":["components/Good.tsx","components/GoodList.tsx","App.tsx","index.tsx"],"names":["Good","props","style","color","good","name","GoodList","goods","map","App","useState","setGoods","downloadData","a","fetch","then","response","json","type","onClick","list","sort","item1","item2","localeCompare","splice","filter","length","ReactDOM","render","document","getElementById"],"mappings":"+OAMaA,G,MAAwB,SAACC,GAAD,OACnC,wBAAIC,MAAO,CAAEC,MAAOF,EAAMG,KAAKD,QAAUF,EAAMG,KAAKC,QCAzCC,EAA4B,SAACL,GAAD,OACvC,4BACGA,EAAMM,MAAMC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,EAAD,CAAMA,KAAMA,SCgD1BK,EAnDC,WAAO,IAAD,EACMC,mBAAiB,IADvB,mBACbH,EADa,KACNI,EADM,KAEdC,EAAY,uCAAG,sBAAAC,EAAA,+EACZC,MALC,yEAMLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,WAHD,2CAAH,qDA8BlB,OACE,oCACE,qDACA,4BAAQC,KAAK,SAASC,QA1BD,WACvBP,IACGG,MAAK,SAAAK,GACJT,EAASS,QAuBX,gBAGA,4BAAQF,KAAK,SAASC,QAtBA,WACxBP,IACGG,MAAK,SAAAK,GACJA,EAAKC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMjB,KAAKmB,cAAcD,EAAMlB,SACxDoB,OAAO,GACVd,EAASS,QAiBX,oBAGA,4BAAQF,KAAK,SAASC,QAhBD,WACvBP,IACGG,MAAK,SAAAK,GACJT,EAASS,EAAKM,QAAO,SAACJ,GAAD,MAA2B,QAAhBA,EAAMnB,eAaxC,sBAGEI,EAAMoB,OAEJ,kBAAC,EAAD,CAAUpB,MAAOA,IADjB,6EC/CVqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2b634970.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  good: Good;\n}\n\nexport const Good: React.FC<Props> = (props) => (\n  <li style={{ color: props.good.color }}>{props.good.name}</li>\n);\n","import React from 'react';\nimport { Good } from './Good';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodList: React.FC<Props> = (props) => (\n  <ul>\n    {props.goods.map(good => <Good good={good} />)}\n  </ul>\n);\n","import React, { FC, useState } from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\n\nconst url = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nconst App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const downloadData = async (): Promise<Good[]> => {\n    return fetch(url)\n      .then(response => {\n        return response.json();\n      });\n  };\n\n  const allButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        setGoods(list);\n      });\n  };\n\n  const fiveButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        list.sort((item1, item2) => item1.name.localeCompare(item2.name))\n          .splice(5);\n        setGoods(list);\n      });\n  };\n\n  const redButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        setGoods(list.filter((item1) => item1.color === 'red'));\n      });\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n      <button type=\"button\" onClick={allButtonHandler}>\n        Download all\n      </button>\n      <button type=\"button\" onClick={fiveButtonHandler}>\n        Download 5 first\n      </button>\n      <button type=\"button\" onClick={redButtonHandler}>\n        Download red goods\n      </button>\n      {!goods.length\n        ? <p>Data of goods is empty. Please load the data</p>\n        : <GoodList goods={goods} />}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}