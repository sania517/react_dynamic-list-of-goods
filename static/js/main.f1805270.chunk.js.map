{"version":3,"sources":["components/Good.tsx","components/GoodList.tsx","App.tsx","index.tsx"],"names":["Good","props","style","color","good","name","GoodList","goods","map","App","useState","setGoods","downloadData","a","fetch","then","response","json","type","onClick","list","sort","item1","item2","localeCompare","splice","newlist","filter","length","ReactDOM","render","document","getElementById"],"mappings":"+OAGaA,G,MAA+B,SAACC,GAAD,OAC1C,wBAAIC,MAAO,CAAEC,MAAOF,EAAMG,KAAKD,QAAUF,EAAMG,KAAKC,QCDzCC,EAAsC,SAACL,GAAD,OACjD,4BACGA,EAAMM,MAAMC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,EAAD,CAAMA,KAAMA,SCuD1BK,EAxDO,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBH,EADmB,KACZI,EADY,KAKpBC,EAAY,uCAAG,sBAAAC,EAAA,+EACZC,MAHG,yEAIPC,MAAK,SAAAC,GACJ,OAAOA,EAASC,WAHD,2CAAH,qDAgClB,OACE,oCACE,qDACA,4BAAQC,KAAK,SAASC,QA5BD,WACvBP,IACGG,MAAK,SAAAK,GACJT,EAASS,QAyBX,gBAGA,4BAAQF,KAAK,SAASC,QAxBA,WACxBP,IACGG,MAAK,SAAAK,GACJA,EAAKC,MAAK,SAACC,EAAaC,GAAd,OAA8BD,EAAMjB,KAAKmB,cAAcD,EAAMlB,SACvEe,EAAKK,OAAO,GACZd,EAASS,QAmBX,oBAGA,4BAAQF,KAAK,SAASC,QAlBD,WACvBP,IACGG,MAAK,SAAAK,GACJ,IAAMM,EAAUN,EAAKO,QAAO,SAACL,GAAD,MAAiC,QAAhBA,EAAMnB,SAEnDQ,EAASe,QAaX,sBAGEnB,EAAMqB,OAEJ,kBAAC,EAAD,CAAUrB,MAAOA,IADjB,6EClDVsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f1805270.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const Good: React.FC<{good: Good}> = (props) => (\n  <li style={{ color: props.good.color }}>{props.good.name}</li>\n);\n","import React from 'react';\nimport { Good } from './Good';\n\nexport const GoodList: React.FC<{goods: Good[]}> = (props) => (\n  <ul>\n    {props.goods.map(good => <Good good={good} />)}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  // const [isEmpty, setIsEmpty] = useState<boolean>(false);\n  const url = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\n  const downloadData = async (): Promise<Good[]> => {\n    return fetch(url)\n      .then(response => {\n        return response.json();\n      });\n  };\n\n  const allButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        setGoods(list);\n      });\n  };\n\n  const fiveButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        list.sort((item1: Good, item2: Good) => item1.name.localeCompare(item2.name));\n        list.splice(5);\n        setGoods(list);\n      });\n  };\n\n  const redButtonHandler = () => {\n    downloadData()\n      .then(list => {\n        const newlist = list.filter((item1: Good) => item1.color === 'red');\n\n        setGoods(newlist);\n      });\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n      <button type=\"button\" onClick={allButtonHandler}>\n        Download all\n      </button>\n      <button type=\"button\" onClick={fiveButtonHandler}>\n        Download 5 first\n      </button>\n      <button type=\"button\" onClick={redButtonHandler}>\n        Download red goods\n      </button>\n      {!goods.length\n        ? <p>Data of goods is empty. Please load the data</p>\n        : <GoodList goods={goods} />}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}